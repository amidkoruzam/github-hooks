name: merge
run-name: ${{ github.actor }} is merging

on:
  push:
    branches:
      - main

env: 
  tag: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}

jobs:
  pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.4.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Install depependencies
        id: install
        uses: docker/build-push-action@v3
        with:
          context: .
          file: .docker/Dockerfile.deps
          push: false
          tags: deps
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          load: true

      - name: Run parallel jobs
        run: |
          docker run deps npm run lint &
          docker run deps npm run type-check &
          jobs -p
          wait $(jobs -p)

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Prepare Tags
        id: tags
        run: |
          echo "id=${{ env.tag }}:${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "latest=${{ env.tag }}:latest" >> $GITHUB_OUTPUT

      - name: Build
        run: |
          docker build . \
            -t ${{ steps.tags.outputs.id }} \
            -t ${{ steps.tags.outputs.latest }} \
            -f .docker/Dockerfile.build \
            --build-arg IMAGE=${{ steps.install.outputs.imageid }}

      - name: Push
        run: docker push ${{ env.tag }}
